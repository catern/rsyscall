@InProceedings{bashcc,
author="Baugh, Spencer",
title="bashcc: Multi-prompt one-shot delimited continuations for Bash",
booktitle="Proceedings of SIGBOVIK 2018",
year="2018",
publisher="Association for Computational Heresy",
address="Pittsburgh, Pennsylvania",
pages="161--164",
}
@book{frankenstein,
place={London}, title={Frankenstein: or The modern prometheus}, publisher={Lackington, Hughes, Harding, Mavor, and Jones}, author={Shelley, Mary W.}, year=1818}
                  
@Inbook{oleg,
author="Kiselyov, Oleg",
editor="Gibbons, Jeremy",
title="Typed Tagless Final Interpreters",
bookTitle="Generic and Indexed Programming: International Spring School, SSGIP 2010, Oxford, UK, March 22-26, 2010, Revised Lectures",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="130--174",
abstract="The so-called `typed tagless final' approach of [6] has collected and polished a number of techniques for representing typed higher-order languages in a typed metalanguage, along with type-preserving interpretation, compilation and partial evaluation. The approach is an alternative to the traditional, or `initial' encoding of an object language as a (generalized) algebraic data type. Both approaches permit multiple interpretations of an expression, to evaluate it, pretty-print, etc. The final encoding represents all and only typed object terms without resorting to generalized algebraic data types, dependent or other fancy types. The final encoding lets us add new language forms and interpretations without breaking the existing terms and interpreters.",
isbn="978-3-642-32202-0",
doi="10.1007/978-3-642-32202-0_3",
url="https://doi.org/10.1007/978-3-642-32202-0_3"
}
                  
@InProceedings{danvy,
author="Danvy, Olivier",
editor="Hatcliff, John
and Mogensen, Torben {\AE}
and Thiemann, Peter",
title="Type-Directed Partial Evaluation",
booktitle="Partial Evaluation",
year="1999",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="367--411",
abstract="Type-directed partial evaluation uses a normalization function to achieve partial evaluation. These lecture notes review its background, foundations, practice, and applications. Of specific interest is the modular technique of offline and online type-directed partial evaluation in Standard ML of New Jersey.",
isbn="978-3-540-47018-2"
}
