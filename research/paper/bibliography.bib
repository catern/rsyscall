@ARTICLE{forkhist, author={L. Nyman and M. Laakso},  journal={IEEE Annals of the History of Computing},  title={Notes on the History of Fork and Join},   year={2016},  volume={38},  number={3},  pages={84-87},}

@InProceedings{forkroad,
author = {Baumann, Andrew and Appavoo, Jonathan and Krieger, Orran and Roscoe, Timothy},
title = {A fork() in the road},
booktitle = {17th Workshop on Hot Topics in Operating Systems},
year = {2019},
month = {May},
abstract = {The received wisdom suggests that Unix's unusual combination of fork() and exec() for process creation was an inspired design. In this paper, we argue that fork was a clever hack for machines and programs of the 1970s that has long outlived its usefulness and is now a liability. We catalog the ways in which fork is a terrible abstraction for the modern programmer to use, describe how it compromises OS implementations, and propose alternatives.

As the designers and implementers of operating systems, we should acknowledge that fork's continued existence as a first-class OS primitive holds back systems research, and deprecate it. As educators, we should teach fork as a historical artifact, and not the first process creation mechanism students encounter.},
publisher = {ACM},
url = {https://www.microsoft.com/en-us/research/publication/a-fork-in-the-road/},
}

@MISC{posix_spawn,
     TITLE = {posix\_spawn, posix\_spawnp - spawn a process},
     author = {The Open Group},
     note = {\url{https://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_spawn.html}},
}

@MISC{create_process,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa}",
}

@inproceedings{keykos,
author = {Bomberger, Allen and Frantz, William and Hardy, Ann and Hardy, Norman and Landau, Charles and Shapiro, Jonathan},
year = {1992},
month = {01},
pages = {95-112},
title = {The KeyKOS nanokernel architecture}
}

@article{sel4,
author = {Heiser, Gernot and Elphinstone, Kevin},
title = {L4 Microkernels: The Lessons from 20 Years of Research and Deployment},
year = {2016},
issue_date = {April 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0734-2071},
url = {https://doi.org/10.1145/2893177},
doi = {10.1145/2893177},
journal = {ACM Trans. Comput. Syst.},
month = apr,
articleno = {Article 1},
numpages = {29},
keywords = {minimality, seL4, IPC, formal verification, L4, virtualization, performance, message passing, worst-case execution time, real time, Microkernels}
}
  
@inproceedings{exokernel,
  title={The exokernel operating system architecture},
  author={Dawson R. Engler},
  year={1998}
}

@MISC{fuschia,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://fuchsia.dev/fuchsia-src/reference/syscalls/process_create}",
}

@InProceedings{singularity,
author = {Aiken, Mark and Fahndrich, Manuel and Hawblitzel, Chris and Hunt, Galen and Larus, Jim},
title = {Deconstructing Process Isolation},
booktitle = {ACM SIGPLAN Workshop on Memory Systems Performance and Correctness},
year = {2006},
month = {October},
abstract = {Most operating systems enforce process isolation through hardware protection mechanisms such as memory segmentation, page mapping, and differentiated user and kernel instructions. Singularity is a new operating system that uses software mechanisms to enforce process isolation. A software isolated process (SIP) is a process whose boundaries are established by language safety rules and enforced by static type checking. SIPs provide a low cost isolation mechanism that provides failure isolation and fast inter-process communication.To compare the performance of Singularity's SIPs against traditional isolation techniques, we implemented an optional hardware isolation mechanism. Protection domains are hardware-enforced address spaces, which can contain one or more SIPs. Domains can either run at the kernel's privilege level or be fully isolated from the kernel and run at the normal application privilege level. With protection domains, we can construct Singularity configurations that are similar to micro-kernel and monolithic kernel systems. We found that hardware-based isolation incurs non-trivial performance costs (up to 25–33%) and complicates system implementation. Software isolation has less than 5% overhead on these benchmarks.The lower run-time cost of SIPs makes their use feasible at a finer granularity than conventional processes. However, hardware isolation remains valuable as a defense-in-depth against potential failures in software isolation mechanisms. Singularity's ability to employ hardware isolation selectively enables careful balancing of the costs and benefits of each isolation technique.},
publisher = {ACM},
url = {https://www.microsoft.com/en-us/research/publication/deconstructing-process-isolation/},
pages = {1-10},
edition = {ACM SIGPLAN Workshop on Memory Systems Performance and Correctness},
}

@MISC{ucspi,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://cr.yp.to/proto/ucspi.txt}",
}

@article{plan9,
  title={Plan 9 from Bell Labs},
  author={Rob Pike and David L. Presotto and Sean Dorward and Bob Flandrena and Ken Thompson and Howard Trickey and Phil Winterbottom},
  journal={Computing Systems},
  year={1995},
  volume={8},
  pages={221-254}
}

@MISC{plan9ns,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://doc.cat-v.org/plan_9/4th_edition/papers/names}",
}

@MISC{rfork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man.cat-v.org/plan_9/2/fork}",
}

@inproceedings{flexsc,
  title={FlexSC: Flexible System Call Scheduling with Exception-Less System Calls},
  author={Livio Baldini Soares and Michael Stumm},
  booktitle={OSDI},
  year={2010}
}
                  
@inproceedings{theoremsforfree,
author = {Wadler, Philip},
title = {Theorems for Free!},
year = {1989},
isbn = {0897913280},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/99370.99404},
doi = {10.1145/99370.99404},
booktitle = {Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture},
pages = {347–359},
numpages = {13},
location = {Imperial College, London, United Kingdom},
series = {FPCA ’89}
}

@inproceedings{oblivious,
  title={Towards oblivious sandboxing with Capsicum},
  author={Jonathan Anderson and Stanley Godfrey and Robert N MWatson},
  year={2017}
}
                  
@inproceedings {gvisor,
author = {Ethan G. Young and Pengfei Zhu and Tyler Caraza-Harter and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
title = {The True Cost of Containing: A gVisor Case Study},
booktitle = {11th {USENIX} Workshop on Hot Topics in Cloud Computing (HotCloud 19)},
year = {2019},
address = {Renton, WA},
url = {https://www.usenix.org/conference/hotcloud19/presentation/young},
publisher = {{USENIX} Association},
month = jul,
}

@InProceedings{viewos,
author="Gardenghi, Ludovico
and Goldweber, Michael
and Davoli, Renzo",
editor="Bubak, Marian
and van Albada, Geert Dick
and Dongarra, Jack
and Sloot, Peter M. A.",
title="View-OS: A New Unifying Approach Against the Global View Assumption",
booktitle="Computational Science -- ICCS 2008",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="287--296",
abstract="One traditional characteristic of operating systems is that all the processes share the same view of the environment. This global view assumption (GVA) means that for processes running on the same computer, the same pathname points to the same file, the processes share the same network stack and therefore the same IP addresses, the routing characteristics are identical, etc. There have been many proposals for ``bending'' the GVA for either individual processes or for the system as a whole. Some of these proposals include microkernels or specialized virtual machines. Most proposals are for system administrators, others are tailored to specific applications.",
isbn="978-3-540-69384-0"
}

@MISC{cloudabi,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://cloudabi.org/}",
}

@MISC{wasi,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/}",
}

@MISC{plash,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://www.cs.jhu.edu/~seaborn/plash/html/}",
}

@inproceedings{popcorn,
  title={Popcorn : a replicated-kernel OS based on Linux},
  author={Antonio Barbalace},
  year={2014}
}

@article{condor, 
  author    = "Douglas Thain and Todd Tannenbaum and Miron Livny",
  title     = "Distributed computing in practice: the Condor experience.",
  journal   = "Concurrency - Practice and Experience",
  volume    = "17",
  number    = "2-4",
  year      = "2005",
  pages     = "323-356",
}

@MISC{pidfd,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/pidfd_open.2.html}",
}

@MISC{criu,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://www.criu.org/Main_Page}",
}
                  
@inproceedings{capsicum,
author = {Watson, Robert N. M. and Anderson, Jonathan and Laurie, Ben and Kennaway, Kris},
title = {Capsicum: Practical Capabilities for UNIX},
year = 2010,
isbn = 8887666655554,
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 19th USENIX Conference on Security},
pages = 3,
numpages = 1,
location = {Washington, DC},
series = {USENIX Security’10}
}
  
@inbook{chainloading,
place={Boston},
title={The Art of UNIX Programming: Security wrappers and Bernstein chaining},
chapter=6,
booktitle={The Art of UNIX Programming},
publisher={Addison-Wesley},
author={Raymond, Eric Steven},
year=2008,
note={\url{http://www.catb.org/~esr/writings/taoup/html/ch06s06.html}}
}

@MISC{pthread_atfork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man3/pthread_atfork.3.html}",
}

@MISC{docker_pipe,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/moby/moby/issues/14221}",
}

@MISC{freebsd_kqueue,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://www.freebsd.org/cgi/man.cgi?kqueue}",
}

@MISC{signalfd,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/signalfd.2.html}",
}

@MISC{socketactivation,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://0pointer.de/blog/projects/socket-activation.html}",
}

@MISC{vfork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/vfork.2.html}",
}

@MISC{vfork_dangerous,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://ewontfix.com/7/}",
}

@MISC{posix_spawn_error_pipe,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://www.openwall.com/lists/musl/2019/07/08/3}",
}

@MISC{continuations,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://matt.might.net/articles/programming-with-continuations--exceptions-backtracking-search-threads-generators-coroutines/}",
}

@MISC{callcc_fork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://mainisusuallyafunction.blogspot.com/2012/02/continuations-in-c-with-fork.html}",
}

@MISC{bashcc,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/catern/bashcc}",
}

@MISC{spawn_h,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://pubs.opengroup.org/onlinepubs/009695399/basedefs/spawn.h.html}",
}

@MISC{credentials,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man7/credentials.7.html}",
}

@MISC{posix_spawn_lwn,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://lwn.net/Articles/360556/}",
}

@MISC{manpages,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://www.kernel.org/doc/man-pages/}",
}

@book{tlpi,
  title={The Linux programming interface: a Linux and UNIX system programming handbook},
  author={Kerrisk, Michael},
  year={2010},
  publisher={No Starch Press}
}

@MISC{subprocess_run,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://docs.python.org/3/library/subprocess.html}",
}

@MISC{manfork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/fork.2.html}",
}

@techreport{capmyths,
  title={Capability myths demolished},
  author={Miller, Mark S and Yee, Ka-Ping and Shapiro, Jonathan and others},
  year=2003,
  institution={Technical Report SRL2003-02, Johns Hopkins University Systems Research}
}

@MISC{unpriv_fuse,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://patchwork.kernel.org/patch/10435567/}",
}

@MISC{user_namespaces,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man7/user_namespaces.7.html}",
}

@inproceedings{threads,
  title={Why threads are a bad idea (for most purposes)},
  author={Ousterhout, John},
  booktitle={Presentation given at the 1996 Usenix Annual Technical Conference},
  volume={5},
  year={1996},
  organization={San Diego, CA, USA}
}

@MISC{lwn_namespaces,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://lwn.net/Articles/531114/}",
}

@MISC{mount_namespaces,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man7/mount_namespaces.7.html}",
}

@MISC{mount,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/mount.2.html}",
}

@MISC{caternfork,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://catern.com/posts/fork.html}",
}

@MISC{lwn_checkpoint,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://lwn.net/Articles/414264/}",
}

@MISC{first_class_address_space,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://lwn.net/Articles/717069/}",
}

@MISC{clone,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/clone.2.html}",
}

@MISC{pid_namespaces,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man7/pid_namespaces.7.html}",
}

@MISC{tini,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/krallin/tini}",
}

@MISC{dumb_init,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/Yelp/dumb-init}",
}

@MISC{execveat,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/execveat.2.html}",
}

@MISC{firejail,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://firejail.wordpress.com/}",
}

@MISC{seccomp,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/seccomp.2.html}",
}

@MISC{fuse,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man4/fuse.4.html}",
}

@MISC{sshfs,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/libfuse/sshfs}",
}

@MISC{encfs,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/vgough/encfs}",
}

@MISC{mp3fs,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/khenriks/mp3fs}",
}

@MISC{ptrace,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/ptrace.2.html}",
}

@MISC{futex,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{http://man7.org/linux/man-pages/man2/futex.2.html}",
}

@MISC{python_subprocess_errpipe,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/python/cpython/blob/v3.8.0/Modules/_posixsubprocess.c#L781}",
}

@MISC{io_uring,
     title = {urltitle},
     author = {urlauthor},
     note = "\url{https://github.com/python/cpython/blob/v3.8.0/Modules/_posixsubprocess.c#L781}",
}

@inproceedings {scone,
author = {Sergei Arnautov and Bohdan Trach and Franz Gregor and Thomas Knauth and Andre Martin and Christian Priebe and Joshua Lind and Divya Muthukumaran and Dan O{\textquoteright}Keeffe and Mark L. Stillwell and David Goltzsche and Dave Eyers and R{\"u}diger Kapitza and Peter Pietzuch and Christof Fetzer},
title = {{SCONE}: Secure Linux Containers with Intel {SGX}},
booktitle = {12th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 16)},
year = {2016},
isbn = {978-1-931971-33-1},
address = {Savannah, GA},
pages = {689--703},
url = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/arnautov},
publisher = {{USENIX} Association},
month = nov,
}

@inproceedings{eleos,
author = {Orenbach, Meni and Lifshits, Pavel and Minkin, Marina and Silberstein, Mark},
title = {Eleos: ExitLess OS Services for SGX Enclaves},
year = {2017},
isbn = {9781450349383},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3064176.3064219},
doi = {10.1145/3064176.3064219},
booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
pages = {238–253},
numpages = {16},
location = {Belgrade, Serbia},
series = {EuroSys ’17}
}
  
